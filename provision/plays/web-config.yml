- name: configure apache
  become: true
  handlers:
    - include: ../handlers.yml
  hosts: all
  vars:
    installedHttpsCerts: {}
  tasks:
    - name: get list of installed certs
      find:
        file_type: any
        paths: '/etc/letsencrypt/live'
        patterns: '*'
        recurse: no
      register: enabledLetsEncryptFiles
    ##--make letsencrypt cert installed check easier to use in templates
    - name: format letsencrypt cert data for consumption
      set_fact:
        installedHttpsCerts: "{{installedHttpsCerts | combine({item.path|basename: httpsCerts[item.path|basename]})}}"
      when: 'httpsCerts[item.path|basename] is defined'
      with_items: '{{enabledLetsEncryptFiles.files}}'
    - name: configure server name
      lineinfile:
        dest: /etc/apache2/apache2.conf
        line: 'ServerName {{serverName}}'
        regexp: '^ServerName.*$'
        state: present
      notify: 'apache conf change'
    - name: configure vhost log format
      lineinfile:
        dest: /etc/apache2/apache2.conf
        line: 'LogFormat "%V:%{local}p %h %l %u %t \"%r\" %>s %O \"%{Referer}i\" \"%{User-Agent}i\"" vhost_combined'
        regexp: '^LogFormat.*vhost_combined$'
        state: present
      notify: 'apache conf change'
    - name: install logs conf
      copy:
        dest: /etc/apache2/conf-enabled/logs.conf
        src: ../../assets/etc/apache2/conf-enabled/logs.conf
      notify: 'apache conf change'
    - name: enable original http port
      lineinfile:
        dest: '/etc/apache2/ports.conf'
        line: 'Listen 2784'
        state: present
      notify: 'apache conf change'
    - name: disable php module #--needed for mpm module switch
      apache2_module:
        name: 'php{{phpVersion}}'
        state: absent
      notify: 'apache conf change'
    - name: remove h2 incompatible mpm
      apache2_module:
        ignore_configcheck: true #--needed for removing mpm module
        name: mpm_prefork
        state: absent
    - name: add h2 compatible mpm
      apache2_module:
        ignore_configcheck: true #--needed for adding mpm module
        name: mpm_event
        state: present
    - name: enable h2
      apache2_module:
        name: http2
      notify: 'apache conf change'
    - name: enable h2 protocols
      lineinfile:
        dest: /etc/apache2/apache2.conf
        line: 'Protocols h2 h2c http/1.1'
        regexp: '^Protocols'
        state: present
      notify: 'apache conf change'
    - name: enable mod_expires
      apache2_module:
        name: expires
        state: present
      notify: 'apache conf change'
    - name: enable mod_headers
      apache2_module:
        name: headers
        state: present
      notify: 'apache conf change'
    - name: enable mod_rewrite
      apache2_module:
        name: rewrite
        state: present
      notify: 'apache conf change'
    - name: enable php module for apache
      apache2_module:
        name: proxy_fcgi
    - name: enable mod_ssl
      apache2_module:
        name: ssl
        state: present
      notify: 'apache conf change'
    - name: disable cgi-bin path
      #-# we're not using cgi-bin dir and it takes a usable url path
      command: a2disconf serve-cgi-bin
      args:
        removes: /etc/apache2/conf-enabled/serve-cgi-bin.conf
      notify: 'apache conf change'
    - name: disable mod_status
      #-# status page not accessible once vhosts are added and takes usable url path
      apache2_module:
        name: status
        state: absent
      notify: 'apache conf change'
    - name: enable php conf for apache
      command: 'a2enconf php{{phpVersion}}-fpm' #-! version embedded
      args:
        creates: '/etc/apache2/conf-enabled/php{{phpVersion}}-fpm.conf'
      notify: 'apache conf change'
    - name: handle phps files as php
      #-# simplest way to allow `.phps` urls to be accessed without risk of exposing code
      lineinfile:
        dest: '/etc/apache2/conf-enabled/php{{phpVersion}}-fpm.conf'
        line: '    <FilesMatch ".+\.ph(ar|p|ps|tml)$">'
        regexp: '<FilesMatch "\.\+\\\.ph\(ar'
        state: present
      notify: 'apache conf change'
    #--allow as many paths as possible
    - name: allow access to nameless php and phps files
      #-# mainly doing this because some bot is hitting `/.php` and throwing an error in the log. don't really know of a danger of allowing access to that file
      replace:
        dest: '/etc/apache2/conf-enabled/php{{phpVersion}}-fpm.conf'
        replace: '# Require all denied'
        regexp: '#?\s?Require all denied'
      notify: 'apache conf change'
    #--allow as many paths as possible
    - name: allow access to safe .ht prefixed files
      lineinfile:
        dest: /etc/apache2/apache2.conf
        line: '<FilesMatch "^\.ht(access|passwd)$">'
        regexp: '^\s*<FilesMatch\s+"\^\\\.ht'
        state: present
      notify: 'apache conf change'
    - name: mod_ssl conf
      copy:
        dest: /etc/apache2/mods-available/ssl.conf
        src: ../../assets/etc/apache2/mods-available/ssl.conf
      notify: 'apache conf change'
    - name: create apache inc directory
      file:
        path: /etc/apache2/inc
        state: directory
    - name: create site inc conf files
      template:
        dest: /etc/apache2/inc/{{item.key}}.conf
        src: ../../assets/etc/apache2/inc/site.conf.j2
      notify: 'apache conf change'
      register: _apacheConfIncResult
      with_dict: '{{ sites }}'
    - name: determine inc file paths
      set_fact:
        apacheIncUsedFiles: '{{_apacheConfIncResult.results|selectattr("invocation", "defined")|map(attribute="invocation.module_args.dest")|list}}'
    - name: get list of all site inc conf files
      find:
        paths: /etc/apache2/inc/
        patterns: '*.conf'
      register: allApacheIncFiles
    - name: determine unneeded site inc files
      set_fact:
        unneededApacheIncFiles: '{{allApacheIncFiles.files|map(attribute="path")|difference(apacheIncUsedFiles)}}'
    - name: remove unneeded site inc files
      file:
        path: '{{item}}'
        state: absent
      with_items: '{{unneededApacheIncFiles}}'
    - name: create apache vhosts
      template:
        dest: /etc/apache2/sites-enabled/{{item.value.sort | default('1')}}-{{item.key}}.conf
        src: ../../assets/etc/apache2/sites-enabled/site.conf.j2
      notify: 'apache conf change'
      register: _apacheConfVhostsResult
      with_dict: '{{sites}}'
    - name: determine vhost file paths
      set_fact:
        apacheVhostUsedFiles: '{{_apacheConfVhostsResult.results|selectattr("invocation", "defined")|map(attribute="invocation.module_args.dest")|list}}'
    - name: get list of all vhost conf files
      find:
        paths: /etc/apache2/sites-enabled/
        patterns: '*.conf'
      register: allApacheVhostFiles
    - name: determine unneeded site vhost files
      set_fact:
        unneededApacheVhostFiles: '{{allApacheVhostFiles.files|map(attribute="path")|difference(apacheVhostUsedFiles)}}'
    - name: remove unneeded site vhost files
      file:
        path: '{{item}}'
        state: absent
      with_items: '{{unneededApacheVhostFiles}}'
    - name: add woff2 mime type
      lineinfile:
        dest: /etc/mime.types
        line: 'font/woff2                          woff2'
        regexp: '^.*woff2$'
        state: present
      notify: 'apache conf change'
    - name: configure web log rotatation
      copy:
        dest: '/etc/logrotate.d/apache2'
        src: '../../assets/etc/logrotate.d/apache2'
- name: configure php
  become: true
  handlers:
    - include: ../handlers.yml
  hosts: all
  tasks:
    - name: configure max children
      lineinfile:
        dest: '/etc/php/{{phpVersion}}/fpm/pool.d/www.conf'
        line: 'pm.max_children = 16'
        regexp: '^pm\.max_children ='
        state: present
      notify: restart php
